# LAYER CASHING IS A PROCESS OF SAVING PREVIOUSLY CREATED BUILD LAYERS AND USED IT
# TO THE NEXT BUILD SO THAT IT WONT BE EXECUTED AGAIN IF THERE IS NO CHANGE COMMITED
# TO THAT CURRENT LAYER
# EACH COMMAND RUN ON THE DOCKERFILE IS CALLED A CASHING LAYER

[LAYER 1] FROM node:18.14.1-alpine3.17
[LAYER 2] WORKDIR /app
[LAYER 3] COPY . .
[LAYER 4] RUN npm install
[LAYER 5] EXPOSE 4000
[LAYER 6] CMD ["node", "app.js"]

# AT INITIAL BUILD, ALL OF THIS COMMAND WILL BE RUN
# AT SECOND BUILD, FOR EXAMPLE THE NODEJS SOURCE CODE IS CHANGED,
# ALL THE LAYER FROM [LAYER 3] COPY . . AND ABOVE WILL BE RUN AGAIN SINCE THE LAYER BEFORE
# THEM IS EXECUTED

[CACHED] FROM node:18.14.1-alpine3.17
[CACHED] WORKDIR /app
[LAYER 3] COPY . .
[LAYER 4] RUN npm install
[LAYER 5] EXPOSE 4000
[LAYER 6] CMD ["node", "app.js"]

# THE BIG PROBLEM WITH THIS IS WE DONT WANT TO RUN SOME OF THESE PROCEDURES
# FOR EXAMPLE THE RUN npm install, IF DO NOT HAVE A CHANGE ON THE package.json
# THE npm install SHOULD NOT RUN

# IN ORDER TO PREVENT THIS FOR OPTIMIZATION
# WE WILL PUT THE RUN npm install before the COPY . . SO THAT IT WILL NOT
# BE INCLUDED ON THE PRECEDING LAYER BELOW COPY . ., BUT THE PROBLE IS THAT
# package.json DOES NOT EXIST YET ON THE WORKING DIRECTORY